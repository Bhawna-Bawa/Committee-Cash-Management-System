/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package designs;

import code.BeanCommGroup;
import code.BeanCommInfo;
import code.BeanCommSlab;
import code.BeanDetails;
import code.CommGroupOperations;
import code.CommInfoOperations;
import code.CommitteeSlabOperations;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.parser.TokenType;

/**
 *
 * @author karan
 */

public class Committee_Info extends javax.swing.JInternalFrame {
    int row;
    String str;
    BeanDetails data;
    ArrayList<BeanCommInfo> list;
    String id,name,type,totalAmount,termAmount,terms;
    public Committee_Info()
    {
        initComponents(); 
    }
   
    public Committee_Info( BeanDetails data)
    {
        
        initComponents();
       emptyTable();
        this.data=data;
        
        String s="Select * from committeeinfo";
        list=new CommInfoOperations().commInfoDisplay(s);
        cbId.removeAllItems();
        cbName.removeAllItems();
            Update.setEnabled(false);
        if(data.getRole().equals("User"))
        {
            jnew.setEnabled(false);
            Update.setEnabled(false);
        }
        
                cbName.disable();
                cbId.disable();
                  
        

        
                
                 if(!rdbtnId.isSelected() || !rdbtnType.isSelected())
        {
            search.setEnabled(false);
        }

    }
     public void emptyTable()
    {
     String[] columnNames = {"Committee Id", "Committee Name","Committee Type", "Total Amount", "Term Amount","Term"};

              Object[][] data ;
              data = new Object[0][columnNames.length];
                DefaultTableModel dtm = new DefaultTableModel(data, columnNames)
                {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };

             jTable1.setModel(dtm);
    }
     public void display(String str)
    {
         String[] columnNames = {"Committee Id", "Committee Name","Committee Type", "Total Amount", "Term Amount","Term"};
        Object[][] data = null;
        list=new CommInfoOperations().commInfoDisplay(str);
        if(list!=null)
        {
                  int i=0;
                  data = new Object[list.size()][columnNames.length];
                  for (BeanCommInfo s : list) 
                  {
                    data[i] = new Object[]{s.getId(),s.getComName(),s.getType(),s.getTotalAmount(),s.getTermAmount(),s.getTerm()};
                    i++;
                    
                  }
                  
                  
                DefaultTableModel dtm = new DefaultTableModel(data, columnNames);
           /*     {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                }; */

                  jTable1.setModel(dtm);   
  
        }
        else
        {
            data = new Object[1][columnNames.length];
            data[0] = new Object[]{"No Record Found","No Record Found","No Record Found","No Record Found","No Record Found","No Record Found"};
                DefaultTableModel dtm = new DefaultTableModel(data, columnNames)
                {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };


             jTable1.setModel(dtm);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jCheckBox1 = new javax.swing.JCheckBox();
        myPanel2 = new designs.MyPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        rdbtnId = new javax.swing.JRadioButton();
        rdbtnType = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cbName = new javax.swing.JComboBox();
        search = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jnew = new javax.swing.JLabel();
        cbId = new javax.swing.JComboBox();
        Update = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        jLabel1.setFont(new java.awt.Font("High Tower Text", 1, 36)); // NOI18N
        jLabel1.setText("      Committee Information");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        buttonGroup1.add(rdbtnId);
        rdbtnId.setText("Committee Id");
        rdbtnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnIdActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbtnType);
        rdbtnType.setText("Committee Name");
        rdbtnType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnTypeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Search By   :");

        cbName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNameActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/designs/close.png"))); // NOI18N
        jButton3.setToolTipText("Close");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jnew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jnew.setText("New Committee Type");
        jnew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jnewMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jnewMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jnewMouseExited(evt);
            }
        });

        cbId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIdActionPerformed(evt);
            }
        });

        Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/designs/in.PNG"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout myPanel2Layout = new javax.swing.GroupLayout(myPanel2);
        myPanel2.setLayout(myPanel2Layout);
        myPanel2Layout.setHorizontalGroup(
            myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel2Layout.createSequentialGroup()
                .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                                .addComponent(search)
                                .addGap(284, 284, 284))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                                .addComponent(cbId, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(cbName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124))))
                    .addGroup(myPanel2Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(rdbtnId)
                        .addGap(100, 100, 100)
                        .addComponent(rdbtnType)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(myPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                        .addComponent(Update)
                        .addGap(293, 293, 293))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel2Layout.createSequentialGroup()
                        .addComponent(jnew, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(255, 255, 255))))
        );
        myPanel2Layout.setVerticalGroup(
            myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel2Layout.createSequentialGroup()
                .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(myPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(myPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbtnType)
                    .addComponent(rdbtnId)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(myPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jnew, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbtnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnIdActionPerformed
        // TODO add your handling code here
        if(rdbtnId.isSelected())
        {
             String s="select * from committeeinfo";
        list=new CommInfoOperations().commInfoDisplay(s);
             cbName.removeAllItems();
              cbId.addItem("-Please Select-");
  
          for(BeanCommInfo l:list)
        {
            cbId.addItem(l.getId());
        }
        }
        search.setEnabled(true);
        cbName.setEnabled(false);
        cbId.setEnabled(true);
       

    }//GEN-LAST:event_rdbtnIdActionPerformed

    private void rdbtnTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnTypeActionPerformed
        // TODO add your handling code here:
        if(rdbtnType.isSelected())
        {
            String s="select * from committeeinfo";
        list=new CommInfoOperations().commInfoDisplay(s);
            cbId.removeAllItems();
          cbName.addItem("-Please Select-");
         for(BeanCommInfo l: list)
        {
            cbName.addItem(l.getComName());
        }
            
        }
        search.setEnabled(true);
        cbId.setEnabled(false);
        cbName.setEnabled(true);
        
       
        
        

    }//GEN-LAST:event_rdbtnTypeActionPerformed

    private void cbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNameActionPerformed
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_cbNameActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:

        if(rdbtnId.isSelected())
        {
            str="select * from committeeinfo where committeeid="+cbId.getSelectedItem();
            display(str);
        }
        else
        if(rdbtnType.isSelected())
        {
            if(cbName.getSelectedIndex()>0)
            {
                String s=(String) cbName.getSelectedItem();

                str="select * from committeeinfo where committeename="+"'"+s+"'";

                display(str);
            }
            else
            JOptionPane.showMessageDialog(null,"Please Select from list");
        }

    }//GEN-LAST:event_searchActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jnewMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jnewMouseEntered
        // TODO add your handling code here:
        jnew.setForeground(Color.WHITE);
    }//GEN-LAST:event_jnewMouseEntered

    private void jnewMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jnewMouseExited
        // TODO add your handling code here:
                jnew.setForeground(Color.BLACK);

    }//GEN-LAST:event_jnewMouseExited

    private void jnewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jnewMouseClicked
        // TODO add your handling code here:
        if(data.getRole().equals("Admin"))
        
        new adminCommInfo().setVisible(true);
        
    }//GEN-LAST:event_jnewMouseClicked

    private void cbIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIdActionPerformed
        // TODO add your handling code here:
       
      
    }//GEN-LAST:event_cbIdActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(data.getRole().equals("Admin"))
        {
            Update.setEnabled(true);

         row=jTable1.getSelectedRow();  
            
      
         
         id=jTable1.getModel().getValueAt(row, 0).toString();
         name=jTable1.getModel().getValueAt(row, 1).toString();
         type=jTable1.getModel().getValueAt(row, 2).toString();     //value at cell
        totalAmount=jTable1.getModel().getValueAt(row, 3).toString();
        termAmount=jTable1.getModel().getValueAt(row, 4).toString();
        terms=jTable1.getModel().getValueAt(row, 5).toString();
         
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
         
        row=jTable1.getSelectedRow();  
            
      
         
         id=jTable1.getModel().getValueAt(row, 0).toString();
         name=jTable1.getModel().getValueAt(row, 1).toString();
         type=jTable1.getModel().getValueAt(row, 2).toString();     //value at cell
        totalAmount=jTable1.getModel().getValueAt(row, 3).toString();
        termAmount=jTable1.getModel().getValueAt(row, 4).toString();
        terms=jTable1.getModel().getValueAt(row, 5).toString();
         
        if(row<0)
          {
              JOptionPane.showMessageDialog(null,"Select Contents from table");
          }
          else
  {
        int i=JOptionPane.showConfirmDialog(null,"Are sure to Edit??","Edit",JOptionPane.YES_NO_OPTION);
       if(i==JOptionPane.YES_OPTION)
       {
        
     
        if(id!=null&& name!=null && type!=null && totalAmount!=null && termAmount!=null && terms!=null)
        {
      
        BeanCommInfo data=new BeanCommInfo();
        data.setId(Integer.parseInt(id));
        data.setComName(name);
        data.setType(type);
        data.setTotalAmount(Integer.parseInt(totalAmount));
        data.setTerm(Integer.parseInt(terms));

        data.setTermAmount(Integer.parseInt(termAmount));
        if(new CommInfoOperations().update(data))
                
        {
                JOptionPane.showMessageDialog(null,"Updated");
                Update.setEnabled(false);
                 cbName.removeAllItems();
                 cbId.removeAllItems();
                 if(rdbtnId.isSelected())
                {
                    String s="select * from committeeinfo";
                    list=new CommInfoOperations().commInfoDisplay(s);
                    cbId.addItem("-Please Select-");
  
                    for(BeanCommInfo l:list)
                    {
                    cbId.addItem(l.getId());
                    }
                }
                  else  if(rdbtnType.isSelected())
                {
                    String s="select * from committeeinfo";
                    list=new CommInfoOperations().commInfoDisplay(s);

                    cbName.addItem("-Please Select-");
                    for(BeanCommInfo l: list)
                        {
                        cbName.addItem(l.getComName());
                        }
                }
               

        }
                else JOptionPane.showMessageDialog(null,"Updation Failed");

        }
        else JOptionPane.showMessageDialog(null,"Row Values should not left blank");
       }
  }     
    }//GEN-LAST:event_UpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbId;
    private javax.swing.JComboBox cbName;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jnew;
    private designs.MyPanel myPanel2;
    private javax.swing.JRadioButton rdbtnId;
    private javax.swing.JRadioButton rdbtnType;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
