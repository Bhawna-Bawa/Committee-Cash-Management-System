/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package designs;

import code.BeanCommGroup;
import code.BeanCommInfo;
import code.BeanDetails;
import code.BeanGrpMembers;
import code.CommGroupOperations;
import code.CommGrpMemOperations;
import code.CommInfoOperations;
import code.EnterDetails;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karan
 */
public class Committee_GroupMember extends javax.swing.JInternalFrame {

    /**
     * Creates new form Committee_GroupMember
     */
    int id, row;
    String id1;
    ArrayList<BeanDetails> List;
    BeanDetails data;
    public Committee_GroupMember(BeanDetails d) {

        initComponents();
        data=d;
        emptyTable();
        String str = "Select *,date_format(startdate,'%D of %M, %Y'),date_format(enddate,'%D of %M, %Y'),date_format(collectiondate,'%D of %M, %Y') from committeegroup";
        ArrayList<BeanCommGroup> list = new CommGroupOperations().retrieveGroup(str);
         remove.setEnabled(false);

        cbGroupId.removeAllItems();
        cbGroupId.addItem("-Please Select-");
        if(list!=null)
        {     
        for (BeanCommGroup l : list) {
            cbGroupId.addItem("" + l.getGrpId());
        }
        }
        if (d.getRole().equals("User")) {
            cbUserID.setEnabled(false);
            add.setEnabled(false);
            remove.setEnabled(false);
        } else {
            String st = "Select * from logindetails";

            ArrayList<BeanDetails> data = new CommGrpMemOperations().allMembers(st);

            for (BeanDetails bd : data) {
                cbUserID.addItem("" + bd.getUserId());

            }

        }

    }
     public void emptyTable()
    {
       String[] columnNames = {"Group Id", "User Id", "First Name", "Last Name", "Contact No", "Email Id",};

              Object[][] data ;
              data = new Object[0][columnNames.length];
                DefaultTableModel dtm = new DefaultTableModel(data, columnNames)
                {
                        @Override
                        public boolean isCellEditable(int row, int column) 
                        {
                        return false;
                    }
                };

             jTable1.setModel(dtm);
    }
    public void display(String s)
    {
        List = new CommGrpMemOperations().allMembers(s);
            String[] columnNames = {"Group Id", "User Id", "First Name", "Last Name", "Contact No", "Email Id",};
            Object[][] data = null;
            if (List != null) {
                int i = 0;
                data = new Object[List.size()][columnNames.length];
                for (BeanDetails p : List) {
                    data[i] = new Object[]{"" + id, "" + p.getUserId(), p.getFirst(), p.getLast(), p.getContact(), p.getEmail()};
                    i++;

                }

                DefaultTableModel dtm = new DefaultTableModel(data, columnNames)
                {
                    @Override
                    public boolean isCellEditable(int row, int column) 
                    {
                        if(column==1)
                        {
                            return false;
                        }
                        else
                            return true;
                    }
                };

                jTable1.setModel(dtm);

            } 
            else
            {
                data = new Object[1][columnNames.length];
                data[0] = new Object[]{"No Record Found", "No Record Found", "No Record Found", "No Record Found", "No Record Found", "No Record Found"};
                DefaultTableModel dtm = new DefaultTableModel(data, columnNames) {
                    @Override
                    public boolean isCellEditable(int row, int column)
                    {
                        return false;
                    }
                };

                jTable1.setModel(dtm);
            }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        myPanel1 = new designs.MyPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbGroupId = new javax.swing.JComboBox();
        cbUserID = new javax.swing.JComboBox();
        txtName = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        jLabel1.setFont(new java.awt.Font("High Tower Text", 1, 36)); // NOI18N
        jLabel1.setText("       Group Members ");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("User Id/Name   :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Group Id   :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("   User       :");

        cbGroupId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbGroupId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGroupIdActionPerformed(evt);
            }
        });

        cbUserID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Please Select-" }));
        cbUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUserIDActionPerformed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/designs/close.png"))); // NOI18N
        jButton3.setToolTipText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        remove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/designs/groupMem.PNG"))); // NOI18N
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout myPanel1Layout = new javax.swing.GroupLayout(myPanel1);
        myPanel1.setLayout(myPanel1Layout);
        myPanel1Layout.setHorizontalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                        .addGap(0, 65, Short.MAX_VALUE)
                        .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                                .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(28, 28, 28)
                                .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbGroupId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbUserID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(172, 172, 172))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                                .addComponent(remove)
                                .addGap(266, 266, 266))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
        );
        myPanel1Layout.setVerticalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel1Layout.createSequentialGroup()
                .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(46, 46, 46)
                .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myPanel1Layout.createSequentialGroup()
                        .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(add)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(remove)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:

      //String []c=((String)cbUserID.getSelectedItem()).split("-");
        int gId = Integer.parseInt((String) cbGroupId.getSelectedItem());
        int i = 0;
       
        if (cbGroupId.getSelectedIndex() > 0 && cbUserID.getSelectedIndex() > 0) {
            
                 i = Integer.parseInt(cbUserID.getSelectedItem().toString());
                 String s = "select a.User_Id,b.FirstName,b.LastName,b.ContactNo,b.EmailId from groupmember a,logindetails b where a.User_Id=b.User_Id and groupid=" + gId;

                    List = new CommGrpMemOperations().allMembers(s);

            if (List != null) 
            {
                 String ans="no";
                for(BeanDetails l:List)
                {
                    if(i==l.getUserId())
                    {
                        ans="exist";
                      JOptionPane.showMessageDialog(null,"Member Already Exist");

                        break;
                    }
                    else ans="no";
                }
                
                 if(ans.equals("no"))
                {
                    BeanGrpMembers b = new BeanGrpMembers();
                        b.setGrpId(gId);
                        b.setUserId(i);
                        if (new CommGrpMemOperations().insertMember(b))
                        {
                            JOptionPane.showMessageDialog(null, "Member Inserted");
                           String st = "select a.User_Id,b.FirstName,b.LastName,b.ContactNo,b.EmailId from groupmember a,logindetails b where a.User_Id=b.User_Id and groupid=" + gId;
                            display(st);
                           
                        } 
                        else 
                        {
                            JOptionPane.showMessageDialog(null, "Insertion Failed");
                            
                        }
                }

            } 
            else if(List==null) 
            {
                BeanGrpMembers b = new BeanGrpMembers();
                b.setGrpId(gId);
                 JOptionPane.showMessageDialog(null, i);
                b.setUserId(i);
            
                if (new CommGrpMemOperations().insertMember(b))
                {
                    JOptionPane.showMessageDialog(null, "Member Inserted");
                } else 
                {
                    JOptionPane.showMessageDialog(null, "Insertion Failed");
                }

            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(null, "Select from list to proceed");
        }

    }//GEN-LAST:event_addActionPerformed

    private void cbGroupIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGroupIdActionPerformed
        // TODO add your handling code here:

        if (cbGroupId.getSelectedIndex() > 0) {
            id = Integer.parseInt((String) cbGroupId.getSelectedItem());
            //System.out.println(id);
            String s = "select a.User_Id,b.FirstName,b.LastName,b.ContactNo,b.EmailId from groupmember a,logindetails b where a.User_Id=b.User_Id and groupid=" + id;
            display(s);
        }


    }//GEN-LAST:event_cbGroupIdActionPerformed

    private void cbUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUserIDActionPerformed
        // TODO add your handling code here:

        int uId = Integer.parseInt((String) cbUserID.getSelectedItem());
        BeanDetails m = new EnterDetails().info(uId);
        txtName.setText("" + m.getFirst() + " " + m.getLast());

    }//GEN-LAST:event_cbUserIDActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        row = jTable1.getSelectedRow();
        id1 = jTable1.getModel().getValueAt(row, 1).toString();
       
     
        int i = JOptionPane.showConfirmDialog(null, "Are you sure to remove??", "Remove", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {

            if (new CommGrpMemOperations().update(Integer.parseInt(id1))) {
                JOptionPane.showMessageDialog(null, "Removed");
                remove.setEnabled(false);
                String s = "select a.User_Id,b.FirstName,b.LastName,b.ContactNo,b.EmailId from groupmember a,logindetails b where a.User_Id=b.User_Id and groupid=" + id;
                display(s);

            } else {
                JOptionPane.showMessageDialog(null, "Remove Operation Failed");
            }

        }
     
    }//GEN-LAST:event_removeActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(data.getRole().equals("Admin"))
         {
                 remove.setEnabled(true);
        }       
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox cbGroupId;
    private javax.swing.JComboBox cbUserID;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private designs.MyPanel myPanel1;
    private javax.swing.JButton remove;
    private javax.swing.JLabel txtName;
    // End of variables declaration//GEN-END:variables
}
